{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/GameField.svelte",
    "../src/Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import {settings} from './SettingsStore.js'\n    \n    let width = $settings.width;\n    let height = $settings.height;\n    let fieldDifficult = $settings.difficult;\n    \n\n\tlet arr = [];\n\tlet fliped = 0;\n\n\tfunction step(x,y){\n\t\tlet off = [[-1,0],[1,0],[0,-1],[0,1],[0,0]];\n\t\tfor(let [dx,dy] of off){\n\t\t\tlet cx = x + dx;\n\t\t\tlet cy = y + dy;\n\t\t\tif(cx >= 0 && cy >= 0 && cx<width && cy<height){\n\t\t\t\tarr[cx][cy] = 1 - arr[cx][cy];\n\t\t\t\tif(arr[cx][cy])++fliped;\n\t\t\t\telse --fliped;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tfunction userStep(x,y){\n\t\tstep(x,y);\n\t\tif(fliped == 0)alert(\"you win\");\n\t}\n\t\n\tfunction gc(limit){\n\t\tlet c = Math.round(Math.random()*limit);\n\t\treturn Math.min(c,limit - 1);\n\t};\n\t\n\t\n\t\n\tfunction generateField(){\n        if(width < 8 || height < 8)return;\n\t\tfliped = 0;\n\t\tarr = [];\n\t\tfor(let x = 0;x<width;++x){\n\t\t\tarr[x] = [];\n\t\t\tfor(let y = 0;y<height;++y){\n\t\t\t\tarr[x][y] = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet st = (gc(20) + 13)*fieldDifficult;\n\t\tfor(let i = 0;i<st;++i)\n\t\t\tstep(gc(width),gc(height));\t\n    }\n    \n    generateField();\n    settings.subscribe((new_settings)=>{\n        ({width,height,difficult:fieldDifficult} = new_settings);\n        generateField()\n    });\n    \n</script>\n\n<style>\n\tdiv.tyle {\n\t\tmin-height:32px;\n\t\tmin-width:32px;\n\t\tborder: solid 1px black;\n\t\t\n\t}\n\tdiv.tyle:hover{\n\t\tborder: solid 1px white\n\t}\n\tdiv.flex {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n</style>\n\n\n{#each arr as row,x}\n\t<div class=flex>\n\t{#each row as v,y}\n\t<div class='tyle' \n\t\tstyle=\"background-color:{v?'red':'green'}\" \n\t\ton:click={()=>userStep(x,y)}\n\t\t/>\n\t{/each}\n\t</div>\n{/each}",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n</script>\n\n<style>\n\t.modal-background {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: rgba(0,0,0,0.3);\n\t}\n\n\t.modal {\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\twidth: calc(100vw - 4em);\n\t\tmax-width: 32em;\n\t\tmax-height: calc(100vh - 4em);\n\t\toverflow: auto;\n\t\ttransform: translate(-50%,-50%);\n\t\tpadding: 1em;\n\t\tborder-radius: 0.2em;\n\t\tbackground: white;\n\t}\n\n\tbutton {\n\t\tdisplay: block;\n\t}\n</style>\n\n<div class='modal-background' on:click='{() => dispatch(\"close\")}'></div>\n\n<div class='modal'>\n\t<slot name='header'></slot>\n\t<hr>\n\t<slot></slot>\n\t<hr>\n\n\t<button on:click='{() => dispatch(\"close\")}'>закрыть окно</button>\n</div>"
  ],
  "names": [],
  "mappings": "AA6DC,GAAG,KAAK,cAAC,CAAC,AACT,WAAW,IAAI,CACf,UAAU,IAAI,CACd,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,KAAK,AAExB,CAAC,AACD,GAAG,mBAAK,MAAM,CAAC,AACd,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,KAAK;CACxB,CAAC,AACD,GAAG,KAAK,cAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACpB,CAAC;AClED,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC5B,CAAC,AAED,MAAM,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAC7B,QAAQ,CAAE,IAAI,CACd,SAAS,CAAE,UAAU,IAAI,CAAC,IAAI,CAAC,CAC/B,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,KAAK,CACpB,UAAU,CAAE,KAAK,AAClB,CAAC,AAED,MAAM,eAAC,CAAC,AACP,OAAO,CAAE,KAAK,AACf,CAAC"
}